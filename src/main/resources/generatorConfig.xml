<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <context id="mybatisTables" targetRuntime="MyBatis3">
        <!--注释去掉-->
        <commentGenerator >
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!-- jdbc连接 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/abs"
                        userId="phcom"
                        password="phcom">
        </jdbcConnection>
        <!-- 类型转换 -->
        <javaTypeResolver >
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>
        <!-- 生成实体类的包名和位置 注意targetProject的值为实体类放在工程中具体位置的相对路径，-->
        <javaModelGenerator targetPackage="com.entity" targetProject="${user.dir}\src\main\java">
            <property name="enableSubPackages" value="true" />
            <property name="trimStrings" value="true" />
        </javaModelGenerator>
        <!-- 生成的SQLMapper映射文件包名和位置 -->
        <sqlMapGenerator targetPackage="mapper"  targetProject="${user.dir}\src\main\resources">
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>
        <!-- 生成DAO的包名和位置，这里配置将生成的dao类放在me.gacl.dao这个包下 -->
        <!--<javaClientGenerator type="ANNOTATEDMAPPER" targetPackage="com.mapper"-->
                             <!--targetProject="${user.dir}\src\main\java">-->
            <!--<property name="enableSubPackages" value="true" />-->
        <!--</javaClientGenerator>-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.mapper"
                             targetProject="${user.dir}\src\main\java">
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>
        <!-- 配置表信息 -->
        <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
             是否生成 example类   -->
        <!-- 更改tableName和domainObjectName就可以 -->
        <!--<table schema="abs" tableName="Teacher" domainObjectName="Teacher"-->
               <!--enableCountByExample="false" enableUpdateByExample="false"-->
               <!--enableSelectByExample="false" selectByExampleQueryId="false">-->
        <table schema="abs" tableName="Teacher" domainObjectName="Teacher">
            <!-- 如果设置为true，生成的model类会直接使用column本身的名字，
            而不会再使用驼峰命名方法，比如BORN_DATE，生成的属性名字就是BORN_DATE,
            而不会是bornDate -->
            <property name="useActualColumnNames" value="true"/>
            <generatedKey column="id" sqlStatement="Mysql" identity="true" />
            <columnOverride column="tname" property="tName" jdbcType="VARCHAR" />
            <columnOverride column="age" property="age" jdbcType="int" />
            <columnOverride column="pmark" property="pMark" jdbcType="VARCHAR"/>

        </table>
    </context>
</generatorConfiguration>